# Backend Dockerfile
FROM node:20-alpine AS base

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Set working directory
WORKDIR /app

# Copy package files
COPY backend/package*.json backend/pnpm-lock.yaml* ./

# Install dependencies
FROM base AS dependencies
RUN pnpm install --frozen-lockfile --prod=false

# Build stage
FROM base AS build
COPY --from=dependencies /app/node_modules ./node_modules
COPY backend/ ./

# Build the application
RUN pnpm build

# Production stage
FROM node:20-alpine AS production

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

WORKDIR /app

# Copy package files and install production dependencies
COPY backend/package*.json backend/pnpm-lock.yaml* ./
RUN pnpm install --frozen-lockfile --prod

# Copy built application from build stage
COPY --from=build /app/dist ./dist
COPY --from=build /app/medusa-config.js ./medusa-config.js
COPY --from=build /app/package.json ./package.json

# Set environment to production
ENV NODE_ENV=production

# Expose port
EXPOSE 9000

# Start the application
CMD ["sh", "-c", "pnpm run db:migrate && pnpm start"]