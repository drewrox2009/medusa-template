# Backend Dockerfile
FROM node:20-alpine AS base

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Install dependencies stage
FROM base AS dependencies
WORKDIR /app
COPY backend/package*.json backend/pnpm-lock.yaml* ./
RUN pnpm install --frozen-lockfile

# Build stage
FROM base AS build
WORKDIR /app
COPY --from=dependencies /app/node_modules ./node_modules
COPY backend/ ./

# Build the application
RUN pnpm build

# Production stage
FROM node:20-alpine AS production

# Install pnpm and wget for healthcheck
RUN corepack enable && corepack prepare pnpm@latest --activate && \
    apk add --no-cache wget

WORKDIR /app

# Copy package files and install production dependencies
COPY backend/package*.json backend/pnpm-lock.yaml* ./
RUN pnpm install --frozen-lockfile --prod

# Copy built application from build stage
COPY --from=build /app/dist ./dist
COPY --from=build /app/medusa-config.js ./medusa-config.js
COPY --from=build /app/package.json ./package.json

# Set environment to production
ENV NODE_ENV=production

# Expose port
EXPOSE 9000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD wget --spider -q http://localhost:9000/health || exit 1

# Start the application (migrations then start)
CMD ["sh", "-c", "pnpm run db:migrate && pnpm start"]